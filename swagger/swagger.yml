swagger: "2.0"
info:
  title: beego Test API
  description: |
    beego has a very cool tools to autogenerate documents for your API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: astaxie@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /v1
paths:
  /branches/:
    get:
      tags:
      - branches
      description: |-
        get Branches
        <br>
      operationId: BranchesController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Branches'
        "403":
          description: ""
    post:
      tags:
      - branches
      description: |-
        create Branches
        <br>
      operationId: BranchesController.Post
      parameters:
      - in: body
        name: body
        description: body for Branches content
        required: true
        schema:
          $ref: '#/definitions/requests.BranchRequestDTO'
      responses:
        "201":
          description: '{int} models.Branches'
        "403":
          description: body is empty
  /branches/{id}:
    get:
      tags:
      - branches
      description: |-
        get Branches by id
        <br>
      operationId: BranchesController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Branches'
        "403":
          description: :id is empty
    put:
      tags:
      - branches
      description: |-
        update the Branches
        <br>
      operationId: BranchesController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Branches content
        required: true
        schema:
          $ref: '#/definitions/requests.BranchRequestDTO'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/responses.BranchResponseDTO'
        "403":
          description: :id is not int
    delete:
      tags:
      - branches
      description: |-
        delete the Branches
        <br>
      operationId: BranchesController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /branches/branch-manager/{id}:
    put:
      tags:
      - branches
      description: |-
        update the Branches manager
        <br>
      operationId: BranchesController.Put Branch Manager
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Branches content
        required: true
        schema:
          $ref: '#/definitions/models.Branches'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/responses.BranchResponseDTO'
        "403":
          description: :id is not int
  /countries/:
    get:
      tags:
      - countries
      description: |-
        get Countries
        <br>
      operationId: CountriesController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Countries'
        "403":
          description: ""
    post:
      tags:
      - countries
      description: |-
        create Countries
        <br>
      operationId: CountriesController.Post
      parameters:
      - in: body
        name: body
        description: body for Countries content
        required: true
        schema:
          $ref: '#/definitions/requests.CountriesRequestDTO'
      responses:
        "200":
          description: '{int} models.Countries'
        "403":
          description: body is empty
  /countries/{id}:
    get:
      tags:
      - countries
      description: |-
        get Countries by id
        <br>
      operationId: CountriesController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Countries'
        "403":
          description: :id is empty
    put:
      tags:
      - countries
      description: |-
        update the Countries
        <br>
      operationId: CountriesController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Countries content
        required: true
        schema:
          $ref: '#/definitions/models.Countries'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Countries'
        "403":
          description: :id is not int
    delete:
      tags:
      - countries
      description: |-
        delete the Countries
        <br>
      operationId: CountriesController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /currencies/:
    get:
      tags:
      - currencies
      description: |-
        get Currencies
        <br>
      operationId: CurrenciesController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Currencies'
        "403":
          description: ""
    post:
      tags:
      - currencies
      description: |-
        create Currencies
        <br>
      operationId: CurrenciesController.Post
      parameters:
      - in: body
        name: body
        description: body for Currencies content
        required: true
        schema:
          $ref: '#/definitions/requests.CurrenciesRequestDTO'
      responses:
        "201":
          description: '{int} models.Currencies'
        "403":
          description: body is empty
  /currencies/{id}:
    get:
      tags:
      - currencies
      description: |-
        get Currencies by id
        <br>
      operationId: CurrenciesController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Currencies'
        "403":
          description: :id is empty
    put:
      tags:
      - currencies
      description: |-
        update the Currencies
        <br>
      operationId: CurrenciesController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Currencies content
        required: true
        schema:
          $ref: '#/definitions/models.Currencies'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Currencies'
        "403":
          description: :id is not int
    delete:
      tags:
      - currencies
      description: |-
        delete the Currencies
        <br>
      operationId: CurrenciesController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
definitions:
  models.Branches:
    title: Branches
    type: object
    properties:
      Active:
        type: integer
        format: int64
      Branch:
        type: string
      BranchId:
        type: integer
        format: int64
      BranchManager:
        $ref: '#/definitions/models.Users'
      Country:
        $ref: '#/definitions/models.Countries'
      CreatedBy:
        type: integer
        format: int64
      DateCreated:
        type: string
        format: datetime
      DateModified:
        type: string
        format: datetime
      Location:
        type: string
      ModifiedBy:
        type: integer
        format: int64
      PhoneNumber:
        type: string
  models.Countries:
    title: Countries
    type: object
    properties:
      Country:
        type: string
      CountryCode:
        type: string
      CountryId:
        type: integer
        format: int64
      CreatedBy:
        type: integer
        format: int64
      DateCreated:
        type: string
        format: datetime
      DateModified:
        type: string
        format: datetime
      DefaultCurrency:
        $ref: '#/definitions/models.Currencies'
      Description:
        type: string
      ModifiedBy:
        type: integer
        format: int64
  models.Currencies:
    title: Currencies
    type: object
    properties:
      Active:
        type: integer
        format: int64
      CreatedBy:
        type: integer
        format: int64
      Currency:
        type: string
      CurrencyId:
        type: integer
        format: int64
      DateCreated:
        type: string
        format: datetime
      DateModified:
        type: string
        format: datetime
      ModifiedBy:
        type: integer
        format: int64
      Symbol:
        type: string
  models.Object:
    title: Object
    type: object
    properties:
      ObjectId:
        type: string
      PlayerName:
        type: string
      Score:
        type: integer
        format: int64
  models.Profile:
    title: Profile
    type: object
    properties:
      Address:
        type: string
      Age:
        type: integer
        format: int64
      Email:
        type: string
      Gender:
        type: string
  models.User:
    title: User
    type: object
    properties:
      Id:
        type: string
      Password:
        type: string
      Profile:
        $ref: '#/definitions/models.Profile'
      Username:
        type: string
  models.Users:
    title: Users
    type: object
    properties:
      Active:
        type: integer
        format: int64
      Address:
        type: string
      CreatedBy:
        type: integer
        format: int64
      DateCreated:
        type: string
        format: datetime
      DateModified:
        type: string
        format: datetime
      Dob:
        type: string
        format: datetime
      Email:
        type: string
      FullName:
        type: string
      Gender:
        type: string
      IdNumber:
        type: string
      IdType:
        type: string
      ImagePath:
        type: string
      IsVerified:
        type: boolean
      MaritalStatus:
        type: string
      ModifiedBy:
        type: integer
        format: int64
      Password:
        type: string
      PhoneNumber:
        type: string
      Role:
        type: integer
        format: int64
      UserDetails:
        type: integer
        format: int64
      UserId:
        type: integer
        format: int64
      UserType:
        type: integer
        format: int64
      Username:
        type: string
  requests.BranchRequestDTO:
    title: BranchRequestDTO
    type: object
    properties:
      AddedBy:
        type: string
      Branch:
        type: string
      CountryCode:
        type: string
      Location:
        type: string
      PhoneNumber:
        type: string
  requests.CountriesRequestDTO:
    title: CountriesRequestDTO
    type: object
    properties:
      Country:
        type: string
      CountryCode:
        type: string
      CurrencyId:
        type: string
  requests.CurrenciesRequestDTO:
    title: CurrenciesRequestDTO
    type: object
    properties:
      AddedBy:
        type: integer
        format: int64
      Currency:
        type: string
      Symbol:
        type: string
  responses.BranchResponseDTO:
    title: BranchResponseDTO
    type: object
    properties:
      Branch:
        $ref: '#/definitions/models.Branches'
      StatusCode:
        type: integer
        format: int64
      StatusDesc:
        type: string
tags:
- name: branches
  description: |
    BranchesController operations for Branches
- name: countries
  description: |
    CountriesController operations for Countries
- name: currencies
  description: |
    CurrenciesController operations for Currencies
